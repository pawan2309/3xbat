apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: 3xbat
  labels:
    app: backend
spec:
  replicas: 3  # Start with 3 instances for load balancing
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: 3xbat-backend:latest  # Your built Docker image
        ports:
        - containerPort: 4001
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: 3xbat-config
              key: NODE_ENV
        - name: PORT
          value: "4001"
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: 3xbat-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: 3xbat-config
              key: REDIS_PORT
        - name: PG_URL
          value: "postgresql://postgres:$(POSTGRES_PASSWORD)@postgres-service:5432/betting_db"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: 3xbat-secrets
              key: POSTGRES_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: 3xbat-secrets
              key: JWT_SECRET
        - name: FRONTEND_URL
          valueFrom:
            configMapKeyRef:
              name: 3xbat-config
              key: FRONTEND_URL
        - name: DISABLE_QUEUES
          value: "0"
        - name: DISABLE_SOCKETS
          value: "0"
        - name: DISABLE_WORKERS
          value: "0"
        resources:
          requests:
            memory: "512Mi"
            cpu: "300m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 4001
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 4001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 4001
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
      initContainers:
      - name: wait-for-db
        image: postgres:15-alpine
        command: ['sh', '-c', 'until pg_isready -h postgres-service -p 5432 -U postgres; do echo waiting for postgres; sleep 2; done;']
      - name: wait-for-redis
        image: redis:7-alpine
        command: ['sh', '-c', 'until redis-cli -h redis-service -p 6379 ping; do echo waiting for redis; sleep 2; done;']
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: 3xbat
spec:
  selector:
    app: backend
  ports:
  - name: http
    port: 3000
    targetPort: 4001
  - name: ws
    port: 3001
    targetPort: 4001
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
  namespace: 3xbat
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
